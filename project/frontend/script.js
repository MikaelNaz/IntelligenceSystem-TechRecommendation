let userId = localStorage.getItem("userId");

if (!userId) {
    userId = "user_" + Math.random().toString(36).substr(2, 9);
    localStorage.setItem("userId", userId);
}
let chatMessages = JSON.parse(localStorage.getItem("chatMessages")) || [];

function sendMessage() {
    let userInput = document.getElementById("userInput").value.trim();
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª:", userInput);
    
    if (userInput !== "") {
        addMessageToChat({ type: "user", text: userInput }, true);
        saveChatHistory();
        
        fetch("http://127.0.0.1:8000/chat/", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ message: userInput, user_id: userId })
        })
        .then(response => {
            console.log("–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:", response.status);
            if (!response.ok) {
                throw new Error('–°–µ—Ç–µ–≤–æ–π –æ—Ç–≤–µ—Ç –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω—ã–º');
            }
            return response.json();
        })
        .then(data => {
            console.log("–î–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
            addMessageToChat({ type: "system", text: data.response }, true);
            saveChatHistory();
            
            if (data.response.includes("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º")) {
                getRecommendation();
            }
            loadLatestRecommendation();
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", error);
            addMessageToChat({
                type: "system",
                text: "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω."
            }, true);
        });

        document.getElementById("userInput").value = "";
    }
}

function addMessageToChat(message, save = false) {
    console.log("–î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ:", message);
    if (save) {
        chatMessages.push(message);
    }
    
    let chatBox = document.getElementById("chat");
    let messageElement = document.createElement("div");
    messageElement.className = `chat-message ${message.type}`;
    
    let textElement = document.createElement("p");
    textElement.textContent = message.text;
    messageElement.appendChild(textElement);
    
    chatBox.appendChild(messageElement);
    
    setTimeout(() => {
        chatBox.scrollTop = chatBox.scrollHeight;
    }, 100);
}

function getRecommendation() {
    console.log("–ó–∞–ø—É—Å–∫ getRecommendation");
    fetch(`http://127.0.0.1:8000/projects/${userId}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π');
            }
            return response.json();
        })
        .then(data => {
            let recommendationsDiv = document.getElementById("recommendations");
            // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞
            console.log("–û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:", data);
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:", error);
            document.getElementById("recommendations").innerHTML = 
                "<p>–û—à–∏–±–∫–∞: ${error.message}</p>";
        });
}

function saveChatHistory() {
    localStorage.setItem("chatMessages", JSON.stringify(chatMessages));
}

function loadChatHistory() {
    let chatBox = document.getElementById("chat");
    chatMessages.forEach(msg => addMessageToChat(msg, false));
}

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
document.head.insertAdjacentHTML('beforeend', `
    <style>
    .loading {
        margin: 10px 0;
        padding: 10px;
        background-color: #f5f5f5;
        border-left: 3px solid #3498db;
        animation: pulse 1.5s infinite;
    }
    
    @keyframes pulse {
        0% { opacity: 0.6; }
        50% { opacity: 1; }
        100% { opacity: 0.6; }
    }
    </style>
    `);

document.addEventListener("DOMContentLoaded", function () {
    const historyPanel = document.getElementById("historyPanel");
    const historyBtn = document.getElementById("historyBtn");

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∏–∑ localStorage
    if (localStorage.getItem("historyPanelVisible") === "true") {
        historyPanel.style.display = "block";
        loadProjectHistory();
    }

    historyBtn.addEventListener("click", function (event) {
        event.preventDefault();
        if (historyPanel.style.display === "none" || historyPanel.style.display === "") {
            loadProjectHistory();
            historyPanel.style.display = "block";
            localStorage.setItem("historyPanelVisible", "true"); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        } else {
            historyPanel.style.display = "none";
            localStorage.setItem("historyPanelVisible", "false"); // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        }
    });
});


function loadProjectHistory() {
    fetch(`http://127.0.0.1:8000/projects/${userId}`)
        .then(response => response.json())
        .then(data => {
            let projectsList = document.getElementById("projectsList");
            projectsList.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
            disableVotedButtons();
            
            if (data.length === 0) {
                projectsList.innerHTML = "<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.</p>";
                return;
            }

            data.forEach(project => {
                let projectDiv = document.createElement("div");
                projectDiv.className = "project-item";
                projectDiv.setAttribute("data-technology-id", project.technology_id);  // –°–æ—Ö—Ä–∞–Ω—è–µ–º technology_id
                projectDiv.innerHTML = `
                    <h3>${project.project_name}</h3>
                    <p><strong>–¢–∏–ø:</strong> ${project.type}, <strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> ${project.platform || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</p>
                    <p><strong>–ë—é–¥–∂–µ—Ç:</strong> ${project.budget}, <strong>–û–ø—ã—Ç:</strong> ${project.experience_level}</p>
                    <p><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> ${project.recommendation_text || "–ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"}</p>
                    <button class="delete-btn" data-project-id="${project.id}" style="margin-top: 10px;">–£–¥–∞–ª–∏—Ç—å</button>
                    <div class="feedback-buttons" style="margin-top: 10px;">
                        <button class="like-btn" style="font-size: 14px; padding: 6px 10px;" onclick="sendFeedback(1, '${project.technology_id}', this, event)">üëç</button>
                        <button class="dislike-btn" style="font-size: 14px; padding: 6px 10px;" onclick="sendFeedback(-1, '${project.technology_id}', this, event)">üëé</button>
                    </div>
                `;
                projectsList.appendChild(projectDiv);
            });

            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
            document.querySelectorAll(".delete-btn").forEach(button => {
                button.addEventListener("click", function(event) {
                    event.preventDefault();
                    let projectId = this.getAttribute("data-project-id");
                    console.log("–£–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç —Å ID:", projectId);
                    deleteProject(projectId);
                });
            });            
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤:", error);
            document.getElementById("projectsList").innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.</p>";
        });
}

function sendFeedback(rating, technologyId, button) {
    const userId = localStorage.getItem("userId");
    if (!userId) {
        console.error("–û—à–∏–±–∫–∞: userId –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–æ–ª–æ—Å–æ–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–Ω–µ–µ
    const feedbackKey = `feedback_${userId}_${technologyId}`;
    if (localStorage.getItem(feedbackKey)) {
        console.warn("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª –∑–∞ —ç—Ç—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é.");
        return;
    }

    fetch("http://127.0.0.1:8000/feedback/", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
            user_id: userId,
            technology_id: technologyId,
            rating: rating
        })
    })
    .then(response => response.json())
    .then(data => {
        console.log("–§–∏–¥–±—ç–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:", data.message);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–ª–æ—Å–æ–≤–∞–ª
        localStorage.setItem(feedbackKey, rating);

        // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
        disableFeedbackButtons(button);
    })
    .catch(error => {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∏–¥–±—ç–∫–∞:", error);
    });
}


function disableVotedButtons() {
    const userId = localStorage.getItem("userId");
    if (!userId) return;

    document.querySelectorAll(".project-item").forEach(item => {
        const technologyId = item.getAttribute("data-technology-id");  // –ü–æ–ª—É—á–∞–µ–º technology_id
        const feedbackKey = `feedback_${userId}_${technologyId}`;  // –ò—Å–ø–æ–ª—å–∑—É–µ–º technology_id
        const storedVote = localStorage.getItem(feedbackKey);

        if (storedVote) {
            const likeBtn = item.querySelector(".like-btn");
            const dislikeBtn = item.querySelector(".dislike-btn");
            likeBtn.disabled = true;
            dislikeBtn.disabled = true;
            likeBtn.style.opacity = "0.5";
            dislikeBtn.style.opacity = "0.5";

            const feedbackMessage = document.createElement("p");
            feedbackMessage.textContent = "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!";
            feedbackMessage.style.color = "gray";
            feedbackMessage.style.marginTop = "5px";
            item.appendChild(feedbackMessage);
        }
    });
}   

function disableFeedbackButtons(button) {
    const buttonsContainer = button.parentElement;
    const likeBtn = buttonsContainer.querySelector(".like-btn");
    const dislikeBtn = buttonsContainer.querySelector(".dislike-btn");
    
    likeBtn.disabled = true;
    dislikeBtn.disabled = true;
    
    likeBtn.style.opacity = "0.5";
    dislikeBtn.style.opacity = "0.5";
    
    const feedbackMessage = document.createElement("p");
    feedbackMessage.textContent = "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!";
    feedbackMessage.style.color = "gray";
    feedbackMessage.style.marginTop = "5px";
    buttonsContainer.appendChild(feedbackMessage);
}


function loadLatestRecommendation() {
    fetch(`http://127.0.0.1:8000/projects/${userId}`)
        .then(response => response.json())
        .then(data => {
            let recommendationsDiv = document.getElementById("recommendations");
            recommendationsDiv.innerHTML = ""; // –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            
            if (data.length === 0) {
                recommendationsDiv.innerHTML = "<p>–ó–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞.</p>";
                return;
            }
            
            let latestProject = data[data.length - 1]; // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
            let rec = document.createElement("div");
            rec.className = "recommendation-item";
            rec.setAttribute("data-technology-id", latestProject.technology_id);  // –ò—Å–ø–æ–ª—å–∑—É–µ–º technology_id
            rec.innerHTML = `
                <h3>${latestProject.project_name}</h3>
                <p><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> ${latestProject.recommendation_text}</p>
                <p><strong>–¢–∏–ø:</strong> ${latestProject.type}</p>
                <p><strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> ${latestProject.platform}</p>
                <p><strong>–ë—é–¥–∂–µ—Ç:</strong> ${latestProject.budget}</p>
                <p><strong>–û–ø—ã—Ç:</strong> ${latestProject.experience_level}</p>
                <div class="feedback-buttons" style="margin-top: 10px;">
                    <button class="like-btn" style="font-size: 14px; padding: 6px 10px;" onclick="sendFeedback(1, '${latestProject.technology_id}', this)">üëç</button>
                    <button class="dislike-btn" style="font-size: 14px; padding: 6px 10px;" onclick="sendFeedback(-1, '${latestProject.technology_id}', this)">üëé</button>
                </div>
            `;
            recommendationsDiv.appendChild(rec);
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:", error);
            document.getElementById("recommendations").innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.</p>";
        });
}
loadLatestRecommendation();

function deleteProject(projectId) {
    if (!projectId || projectId === "undefined") { 
        console.error("–û—à–∏–±–∫–∞: id –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω!", projectId);
        return;
    }

    console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º DELETE-–∑–∞–ø—Ä–æ—Å –¥–ª—è id:", projectId);

    fetch(`http://127.0.0.1:8000/projects/${projectId}`, { method: "DELETE" })
        .then(response => {
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');
            }
            return response.json();
        })
        .then(data => {
            console.log("–ü—Ä–æ–µ–∫—Ç —É–¥–∞–ª–µ–Ω:", data.message);

            // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –∏–∑ DOM –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            let projectElement = document.querySelector(`.delete-btn[data-project-id="${projectId}"]`).closest('.project-item');
            if (projectElement) {
                projectElement.remove(); // –£–¥–∞–ª—è–µ–º HTML-—ç–ª–µ–º–µ–Ω—Ç
                console.log("–£–¥–∞–ª–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –∏–∑ DOM:", projectId);
            } else {
                console.error("–ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å ID:", projectId);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –µ—â–µ –ø—Ä–æ–µ–∫—Ç—ã
            let remainingProjects = document.querySelectorAll('.project-item');
            if (remainingProjects.length === 0) {
                document.getElementById("projectsList").innerHTML = "<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.</p>";
            }
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:", error);
        });
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ PDF
function addPDFListener() {
    const saveBtn = document.getElementById("savePdfBtn");
    if (saveBtn) {
        saveBtn.addEventListener("click", () => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ –±–ª–æ–∫–µ —á–∞—Ç–∞ –∏–ª–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
            const recommendationsDiv = document.getElementById("recommendations");
            const hasRecommendationsInDiv = recommendationsDiv && 
                recommendationsDiv.querySelector(".recommendation-item");
                
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–æ–≤–æ "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è" –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —á–∞—Ç–∞
            const chatMessages = document.querySelectorAll(".chat-message.system p");
            let hasRecommendationsInChat = false;
            
            for (let message of chatMessages) {
                if (message.textContent.includes("–í–æ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:")) {
                    hasRecommendationsInChat = true;
                    break;
                }
            }
            
            // –ï—Å–ª–∏ –Ω–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ, –Ω–∏ –≤ —á–∞—Ç–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (!hasRecommendationsInDiv && !hasRecommendationsInChat) {
                addMessageToChat({
                    type: "system",
                    text: "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å PDF. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∑–∞–≤–µ—Ä—à–∏–≤ –æ–ø—Ä–æ—Å."
                }, true);
                saveChatHistory();
                return;
            }
            
            // –ï—Å–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–µ, –Ω–æ –Ω–µ—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ,
            // –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º PDF
            if (!hasRecommendationsInDiv && hasRecommendationsInChat) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
                addMessageToChat({
                    type: "system",
                    text: "–ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è PDF..."
                }, true);
                saveChatHistory();
                
                // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
                try {
                    getRecommendation();
                } catch (e) {
                    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:", e);
                }
            }
            
            // –ü–æ–ª—É—á–∞–µ–º userId –∏–∑ sessionStorage
            const userId = localStorage.getItem("userId");
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            document.getElementById("recommendations").innerHTML += "<p class='loading'>–°–æ–∑–¥–∞–Ω–∏–µ PDF...</p>";
            
            // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ backend –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è PDF
            fetch(`http://127.0.0.1:8000/export_pdf/${userId}`, {
                method: "GET",
                responseType: "blob" // –í–∞–∂–Ω–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–Ω–∞—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF');
                }
                return response.blob();
            })
            .then(blob => {
                // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                const url = window.URL.createObjectURL(blob);
                
                // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                const a = document.createElement('a');
                a.style.display = 'none';
                a.href = url;
                a.download = 'recommendations.pdf';
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ DOM –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
                document.body.appendChild(a);
                a.click();
                
                // –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫—É –∏ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º URL
                window.URL.revokeObjectURL(url);
                a.remove();
                
                // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                const loadingElement = document.querySelector('.loading');
                if (loadingElement) {
                    loadingElement.remove();
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                addMessageToChat({
                    type: "system",
                    text: "PDF —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!"
                }, true);
                saveChatHistory();
            })
            .catch(error => {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ PDF:", error);
                
                // –£–¥–∞–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                const loadingElement = document.querySelector('.loading');
                if (loadingElement) {
                    loadingElement.remove();
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                addMessageToChat({
                    type: "system",
                    text: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ PDF. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                }, true);
                saveChatHistory();
            });
        });
    } else {
        console.error("–ö–Ω–æ–ø–∫–∞ '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ PDF' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
    }
}

// –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
document.getElementById("sendBtn").addEventListener("click", function(event) {
    event.preventDefault();
    sendMessage();
});

document.getElementById("userInput").addEventListener("keypress", function(event) {
    if (event.key === "Enter") {
        event.preventDefault();
        sendMessage();
    }
});

document.querySelectorAll('.sidebar a').forEach(link => {
    link.addEventListener('click', function(event) {
        event.preventDefault();
        console.log('–ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω');
    });
});

document.getElementById("restartFormBtn").addEventListener("click", function () {
    localStorage.removeItem('chatMessages');
    fetch(`http://127.0.0.1:8000/restart_session/${userId}`, { method: "POST" })
        .then(response => {
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Å–µ—Å—Å–∏–∏');
            }
            return response.json();
        })
        .then(data => {
            console.log("–§–æ—Ä–º–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞:", data.message);

            // –û—á–∏—â–∞–µ–º —á–∞—Ç
            chatMessages = []; // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
            document.getElementById("chat").innerHTML = ""; // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è

            document.getElementById("chat").innerHTML = `<div class="chat-message system">
                <p>–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º. –ö–∞–∫–æ–π —Ç–∏–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ?</p>
                <small style="color: gray;">–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–∞—Ç–∏–≤–Ω–æ–µ, –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–µ –∏–ª–∏ –≥–∏–±—Ä–∏–¥–Ω–æ–µ</small>
            </div>`;
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ñ–æ—Ä–º—ã:", error);
            addMessageToChat({
                type: "system",
                text: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            }, true);
        });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function showEmailModal() {
    const modal = document.getElementById("emailModal");
    modal.classList.add("active");
    document.getElementById("emailInput").focus();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function hideEmailModal() {
    const modal = document.getElementById("emailModal");
    modal.classList.remove("active");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
function sendEmail() {
    const emailInput = document.getElementById("emailInput");
    const userEmail = emailInput.value.trim();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    if (!userEmail || !userEmail.includes("@") || !userEmail.includes(".")) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å");
        return;
    }
    
    hideEmailModal();
    
    addMessageToChat({
        type: "system",
        text: "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É..."
    }, true);

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 —Å–µ–∫—É–Ω–¥)
    const timeout = 10000; // 10 —Å–µ–∫—É–Ω–¥
    const timeoutPromise = new Promise((_, reject) => {
        setTimeout(() => {
            reject(new Error("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞"));
        }, timeout);
    });

    Promise.race([
        fetch("http://127.0.0.1:8000/send_email/", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ 
                user_email: userEmail, 
                user_id: userId  
            })
        }),
        timeoutPromise
    ])
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.success || data.message === "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ email!") {
            addMessageToChat({
                type: "system",
                text: `–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É: ${userEmail}`
            }, true);
        } else {
            throw new Error(data.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ");
        }
        emailInput.value = "";
    })
    .catch(error => {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:", error);
        addMessageToChat({
            type: "system",
            text: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ –ø–æ—á—Ç—É: ${error.message}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.`
        }, true);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function initEmailModal() {
    document.getElementById("sendEmailBtn").addEventListener("click", showEmailModal);
    document.getElementById("cancelEmailBtn").addEventListener("click", hideEmailModal);
    document.getElementById("submitEmailBtn").addEventListener("click", sendEmail);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –æ–∫–Ω–∞
    document.getElementById("emailModal").addEventListener("click", function(e) {
        if (e.target === this) {
            hideEmailModal();
        }
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Esc
    document.addEventListener("keydown", function(e) {
        const modal = document.getElementById("emailModal");
        if (e.key === "Escape" && modal.classList.contains("active")) {
            hideEmailModal();
        }
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ DOM
window.addEventListener("DOMContentLoaded", () => {
    addPDFListener();
    loadChatHistory();
    initEmailModal();
    // loadRecommendations();
});


